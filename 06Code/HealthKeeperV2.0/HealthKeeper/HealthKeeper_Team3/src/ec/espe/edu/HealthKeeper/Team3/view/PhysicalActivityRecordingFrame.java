package ec.espe.edu.HealthKeeper.Team3.view;

import javax.swing.JFrame; // Needed for JFrame.DISPOSE_ON_CLOSE
import javax.swing.JOptionPane; // For user feedback messages

/**
 *
 * @author Maria Quiroz
 */
public class PhysicalActivityRecordingFrame extends javax.swing.JFrame {

    // Declare a private field to hold a reference to the parent MenuFrame
    private MenuFrame parentMenuFrame;

    /**
     * Creates new form PhysicalActivityRecordingFrame.
     * This constructor should be used when opening this frame from the MenuFrame.
     * @param parent The instance of the MenuFrame that opened this frame.
     */
    public PhysicalActivityRecordingFrame(MenuFrame parent) {
        this.parentMenuFrame = parent; // Store the reference to the parent menu frame
        initComponents();
        this.setLocationRelativeTo(null); // Center the frame on the screen
        setTitle("HealthKeeper - Record Physical Activity"); // Set a descriptive title for the frame
        // Set default close operation to DISPOSE_ON_CLOSE.
        // This ensures that only this window closes, and the application continues to run.
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * Default constructor for PhysicalActivityRecordingFrame.
     * This constructor might be used for independent testing, but in a multi-frame
     * application, it's generally better to use the parameterized constructor
     * to ensure the parent frame relationship is established.
     */
    public PhysicalActivityRecordingFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("HealthKeeper - Record Physical Activity (Standalone Test)");
        // No parentMenuFrame is set, so behavior will differ if "Back to Menu" is clicked.
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // Still dispose, not exit
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lActivityName = new javax.swing.JLabel();
        lDuration = new javax.swing.JLabel();
        lIntensity = new javax.swing.JLabel();
        txtActivityName = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        txtIntensity = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lTitle = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnRecordActivity = new javax.swing.JButton();
        btnBackToMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lActivityName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lActivityName.setText("Activity Name:");

        lDuration.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lDuration.setText("Duration (Minutes):");

        lIntensity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lIntensity.setText("Intensity:");

        txtActivityName.setBackground(new java.awt.Color(255, 255, 255));
        txtActivityName.setForeground(new java.awt.Color(0, 0, 0));

        txtDuration.setBackground(new java.awt.Color(255, 255, 255));
        txtDuration.setForeground(new java.awt.Color(0, 0, 0));

        txtIntensity.setBackground(new java.awt.Color(255, 255, 255));
        txtIntensity.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lDuration)
                        .addGap(34, 34, 34)
                        .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lActivityName)
                        .addGap(57, 57, 57)
                        .addComponent(txtActivityName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lActivityName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtActivityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDuration)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lIntensity)
                    .addComponent(txtIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        lTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lTitle.setText("Physical activity recording");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(lTitle)
                .addContainerGap())
        );

        btnRecordActivity.setBackground(new java.awt.Color(51, 204, 0));
        btnRecordActivity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRecordActivity.setForeground(new java.awt.Color(0, 0, 0));
        btnRecordActivity.setText("Record physical activity");
        btnRecordActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordActivityActionPerformed(evt);
            }
        });

        btnBackToMenu.setBackground(new java.awt.Color(153, 102, 0));
        btnBackToMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBackToMenu.setForeground(new java.awt.Color(0, 0, 0));
        btnBackToMenu.setText("Back to menu");
        btnBackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnRecordActivity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnBackToMenu)
                .addGap(29, 29, 29))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRecordActivity)
                    .addComponent(btnBackToMenu))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecordActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordActivityActionPerformed
        // Retrieve activity values from text fields
        String activityName = txtActivityName.getText();
        String durationStr = txtDuration.getText();
        String intensity = txtIntensity.getText();

        // Basic validation: Check if any field is empty
        if (activityName.isEmpty() || durationStr.isEmpty() || intensity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all activity fields.",
                    "Input Error", JOptionPane.WARNING_MESSAGE);
            return; // Stop processing if any field is empty
        }

        try {
            // Parse duration to an integer
            int duration = Integer.parseInt(durationStr);

            // For now, let's just print the recorded physical activity to the console.
            // In a real application, you would save these to a database (e.g., MongoDB).
            System.out.println("Physical Activity Recorded:");
            System.out.println("  Activity Name: " + activityName);
            System.out.println("  Duration: " + duration + " minutes");
            System.out.println("  Intensity: " + intensity);

            // Provide user feedback that the activity was "recorded"
            JOptionPane.showMessageDialog(this, "Physical activity recorded successfully!",
                    "Success", JOptionPane.INFORMATION_MESSAGE);

            // Clear the text fields after successful recording
            txtActivityName.setText("");
            txtDuration.setText("");
            txtIntensity.setText("");

        } catch (NumberFormatException e) {
            // Handle cases where duration input is not a valid number
            JOptionPane.showMessageDialog(this, "Invalid input for duration. Please enter a numerical value.",
                    "Input Error", JOptionPane.ERROR_MESSAGE);
            System.err.println("Error parsing duration input: " + e.getMessage());
        } catch (Exception e) {
            // Catch any other unexpected errors
            JOptionPane.showMessageDialog(this, "An unexpected error occurred while recording physical activity.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println("Unexpected error in physical activity recording: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRecordActivityActionPerformed

    private void btnBackToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToMenuActionPerformed
        this.dispose(); // Close the current PhysicalActivityRecordingFrame

        // Check if the parent menu frame exists and make it visible
        if (parentMenuFrame != null) {
            parentMenuFrame.setVisible(true);
        } else {
            // This case should ideally not happen if the frame is always opened from MenuFrame.
            // It's a fallback for direct testing of this frame.
            System.err.println("Warning: parentMenuFrame was null. Opening a new MenuFrame.");
            // You might want to remove this line in your final application if you ensure
            // PhysicalActivityRecordingFrame is always opened via a MenuFrame instance.
            new MenuFrame().setVisible(true); // Create a new MenuFrame instance
        }
    }//GEN-LAST:event_btnBackToMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhysicalActivityRecordingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhysicalActivityRecordingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhysicalActivityRecordingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhysicalActivityRecordingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // When running this frame directly for testing, pass null as there's no parent MenuFrame.
                // In your actual application, an instance of MenuFrame will be passed here.
                new PhysicalActivityRecordingFrame(null).setVisible(true); // Pass null for standalone testing
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToMenu;
    private javax.swing.JButton btnRecordActivity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lActivityName;
    private javax.swing.JLabel lDuration;
    private javax.swing.JLabel lIntensity;
    private javax.swing.JLabel lTitle;
    private javax.swing.JTextField txtActivityName;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtIntensity;
    // End of variables declaration//GEN-END:variables
}
